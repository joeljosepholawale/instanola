# üîí SECURE Environment Variables Configuration
# ‚ö†Ô∏è CRITICAL: VITE_ variables are PUBLIC and visible to all website visitors!

# ‚úÖ SAFE - Public configuration (these can be in VITE_ variables)
VITE_FIREBASE_API_KEY=your_firebase_api_key_here
VITE_FIREBASE_AUTH_DOMAIN=your_project.firebaseapp.com  
VITE_FIREBASE_PROJECT_ID=your_project_id
VITE_FIREBASE_STORAGE_BUCKET=your_project.appspot.com
VITE_FIREBASE_MESSAGING_SENDER_ID=your_sender_id
VITE_FIREBASE_APP_ID=your_app_id
VITE_FIREBASE_MEASUREMENT_ID=your_measurement_id

# ‚úÖ SAFE - App configuration
VITE_APP_NAME=ProxyNumSMS
VITE_APP_URL=https://yourdomain.com
VITE_SUPPORT_EMAIL=support@yourdomain.com
VITE_NODE_ENV=production

# ‚ùå NEVER PUT THESE IN VITE_ VARIABLES - THEY WILL BE EXPOSED!
# Instead, use Firebase Function secrets:

# firebase functions:secrets:set DAISYSMS_API_KEY
# firebase functions:secrets:set PAYMENTPOINT_API_KEY
# firebase functions:secrets:set PAYMENTPOINT_SECRET_KEY
# firebase functions:secrets:set PAYMENTPOINT_BUSINESS_ID
# firebase functions:secrets:set PLISIO_API_SECRET

# ‚ùå THESE ARE EXAMPLES OF WHAT NOT TO DO:
# VITE_DAISYSMS_API_KEY=visible_to_all_users
# VITE_PAYMENTPOINT_SECRET=visible_to_all_users
# VITE_API_SECRET=visible_to_all_users
# VITE_ENCRYPTION_KEY=visible_to_all_users

# üîß How to properly secure API keys:
# 1. Store in Firebase Function secrets (server-side)
# 2. Create proxy functions for API calls
# 3. Authenticate users before API access
# 4. Never expose sensitive keys to client-side code

# üìñ For more details, see API_SECURITY_SETUP.md
