
Public
ENVIRONMENT
No Environment
LAYOUT
Double Column
LANGUAGE
cURL - cURL
NOWPayments API
Introduction
Authentication
Standard e-commerce flow for NOWPayments API:
API Documentation
Auth and API status
Currencies
Payments
Mass payouts
Conversions
Custody
Fiat payouts (coming soon)
Recurring Payments API (Email Subscriptions feature)
Use cases
NOWPayments API
NOWPayments is a non-custodial cryptocurrency payment processing platform. Accept payments in a wide range of cryptos and get them instantly converted into a coin of your choice and sent to your wallet. Keeping it simple – no excess.

Authentication
To use the NOWPayments API you should do the following:

Sign up at nowpayments.io;
Specify your payout wallet;
Generate an API key and IPN secret key;
Please note: IPN secret key may be shown fully only upon creation. Make sure to save it after generation.
Standard e-commerce flow for NOWPayments API:
API - Check API availability with the "GET API status" method. If required, check the list of available payment currencies with the "GET available currencies" method;
UI - Ask a customer to select item/items for purchase to determine the total sum;
UI - Ask a customer to select payment currency;
API - Get the minimum payment amount for the selected currency pair (payment currency to your payout wallet currency) with the "GET Minimum payment amount" method;
API - Get the estimate of the total amount in crypto with "GET Estimated price" and check that it is larger than the minimum payment amount from step 4;
API - Call the "POST Create payment" method to create a payment and get the deposit address (in our example, the generated BTC wallet address is returned from this method);
UI - Ask a customer to send the payment to the generated deposit address (in our example, user has to send BTC coins);
UI - A customer sends coins, NOWPayments processes and exchanges them (if required), and settles the payment to your payout wallet (in our example, to your ETH address);
API - You can get the payment status either via our IPN callbacks or manually, using "GET Payment Status" and display it to a customer so that they know when their payment has been processed;
API - you call the list of payments made to your account via the "GET List of payments" method;
Additionally, you can see all of this information in your Account on NOWPayments website;
Alternative flow
API - Check API availability with the "GET API status" method. If required, check the list of available payment currencies with the "GET available currencies" method;
UI - Ask a customer to select item/items for purchase to determine the total sum;
UI - Ask a customer to select payment currency;
API - Get the minimum payment amount for the selected currency pair (payment currency to your payout wallet currency) with the "GET Minimum payment amount" method;
API - Get the estimate of the total amount in crypto with "GET Estimated price" and check that it is larger than the minimum payment amount from step 4;
API - Call the "POST Create Invoice method to create an invoice. Set "success_url" - parameter so that the user will be redirected to your website after successful payment;
UI - display the invoice url or redirect the user to the generated link;
NOWPayments - the customer completes the payment and is redirected back to your website (only if "success_url" parameter is configured correctly!);
API - You can get the payment status either via our IPN callbacks or manually, using "GET Payment Status" and display it to a customer so that they know when their payment has been processed;
API - you call the list of payments made to your account via the "GET List of payments" method;
Additionally, you can see all of this information in your Account on NOWPayments website;
API Documentation
Instant Payments Notifications
IPN (Instant payment notifications, or callbacks) are used to notify you when transaction status is changed.
To use them, you should complete the following steps:

Generate and save the IPN Secret key in Payment Settings tab at the Dashboard;
Insert your URL address where you want to get callbacks in create_payment request. The parameter name is ipn_callback_url. You will receive payment updates (statuses) to this URL address.**
Please, take note that we cannot send callbacks to your localhost unless it has dedicated IP address.**
important Please make sure that firewall software on your server (i.e. Cloudflare) does allow our requests to come through. It may be required to whitelist our IP addresses on your side to get it. The list of these IP addresses can be requested at partners@nowpayments.io;
You will receive all the parameters at the URL address you specified in (2) by POST request;
The POST request will contain the x-nowpayments-sig parameter in the header.
The body of the request is similiar to a get payment status response body.
You can see examples in "Webhook examples" section.
Sort the POST request by keys and convert the it to string using
JSON.stringify (params, Object.keys(params).sort()) or the same function;
Sign a string with an IPN-secret key with HMAC and sha-512 key;
Compare the signed string from the previous step with the x-nowpayments-sig , which is stored in the header of the callback request;
If these strings are similar it is a success.
Otherwise, contact us on support@nowpayments.io to solve the problem.
Example of creating a signed string at Node.JS

View More
Plain Text
function sortObject(obj) {
  return Object.keys(obj).sort().reduce(
    (result, key) => {
      result[key] = (obj[key] && typeof obj[key] === 'object') ? sortObject(obj[key]) : obj[key]
      return result
    },
    {}
  )
}

const hmac = crypto.createHmac('sha512', notificationsKey);
hmac.update(JSON.stringify(sortObject(params)));
const signature = hmac.digest('hex');
Example of comparing signed strings in PHP

View More
Plain Text
function tksort(&$array)
  {
  ksort($array);
  foreach(array_keys($array) as $k)
    {
    if(gettype($array[$k])=="array")
      {
      tksort($array[$k]);
      }
    }
  }
function check_ipn_request_is_valid()
    {
        $error_msg = "Unknown error";
        $auth_ok = false;
        $request_data = null;
        if (isset($_SERVER['HTTP_X_NOWPAYMENTS_SIG']) && !empty($_SERVER['HTTP_X_NOWPAYMENTS_SIG'])) {
            $recived_hmac = $_SERVER['HTTP_X_NOWPAYMENTS_SIG'];
            $request_json = file_get_contents('php://input');
            $request_data = json_decode($request_json, true);
            tksort($request_data);
            $sorted_request_json = json_encode($request_data, JSON_UNESCAPED_SLASHES);
            if ($request_json !== false && !empty($request_json)) {
                $hmac = hash_hmac("sha512", $sorted_request_json, trim($this->ipn_secret));
                if ($hmac == $recived_hmac) {
                    $auth_ok = true;
                } else {
                    $error_msg = 'HMAC signature does not match';
                }
            } else {
                $error_msg = 'Error reading POST data';
            }
        } else {
            $error_msg = 'No HMAC signature sent.';
        }
    }
Example comparing signed signatures in Python

View More
python
import json 
import hmac 
import hashlib
def np_signature_check(np_secret_key, np_x_signature, message):
    sorted_msg = json.dumps(message, separators=(',', ':'), sort_keys=True)
    digest = hmac.new(
    str(np_secret_key).encode(), 
    f'{sorted_msg}'.encode(),
    hashlib.sha512)
    signature = digest.hexdigest()
    if signature == np_x_signature:
        return
    else:
        print("HMAC signature does not match")
Usually you will get a notification per each step of processing payments, withdrawals, or transfers, related to custodial recurring payments.

The webhook is being sent automatically once the transaction status is changed.

You also can request an additional IPN notification using your NOWPayments dashboard.

Please note that you should set up an endpoint which can receive POST requests from our server.

Before going production we strongly recommend to test the endpoint by making a test request to it by yourself to ensure it's working properly.

Recurrent payment notifications
If an error is detected, the payment will be flagged and will receive additional recurrent notifications (number of recurrent notifications can be changed in your Payment Settings-> Instant Payment Notifications).

If an error is received again during the payment processing, recurrent notifications will be initiated again.

Example: "Timeout" is set to 1 minute and "Number of recurrent notifications" is set to 3.

Once an error is detected, you will receive 3 notifications at 1 minute intervals.

Webhooks Examples:
Payments:

View More
json
{
"payment_id":123456789,
"parent_payment_id":987654321,
"invoice_id":null,
"payment_status":"finished",
"pay_address":"address",
"payin_extra_id":null,
"price_amount":1,
"price_currency":"usd",
"pay_amount":15,
"actually_paid":15,
"actually_paid_at_fiat":0,
"pay_currency":"trx",
"order_id":null,
"order_description":null,
"purchase_id":"123456789",
"outcome_amount":14.8106,
"outcome_currency":"trx",
"payment_extra_ids":null
"fee": {
"currency":"btc",
"depositFee":0.09853637216235617,
"withdrawalFee":0,
"serviceFee":0
}
}
Withdrawals:

View More
json
{
"id":"123456789",
"batch_withdrawal_id":"987654321",
"status":"CREATING",
"error":null,
"currency":"usdttrc20",
"amount":"50",
"address":"address",
"fee":null,
"extra_id":null,
"hash":null,
"ipn_callback_url":"callback_url",
"created_at":"2023-07-27T15:29:40.803Z",
"requested_at":null,
"updated_at":null
}
Custodial recurring payments:

json
{
"id":"1234567890",
"status":"FINISHED",
"currency":"trx",
"amount":"12.171365564140688",
"ipn_callback_url":"callback_url",
"created_at":"2023-07-26T14:20:11.531Z",
"updated_at":"2023-07-26T14:20:21.079Z"
}
Several payments for one order
If you want to create several payments for one order, you should do the following:

Create a payment for the full order amount;
Save "purchase_id" which will be in "create_payment" response;
Create next payment or payments with this "purchase_id" in "create_payment" request;
Only works for partially_paid payments;
It may be useful if you want to give your customers an opportunity to pay a full order with several payments, for example, one part in BTC and one part in ETH. Also, if your customer accidentally paid you only part of a full amount, you can ask them to make another payment.

Packages
Please find our out-of-the box packages for easy integration below:

JavaScript package

[PHP package]
(https://packagist.org/packages/nowpayments/nowpayments-api-php)

More coming soon!

Payments
GET
Get user balance
https://api.nowpayments.io/v1/sub-partner/balance/:id
With this endpoint you can get a certain user's balance to incorporate it in your player's dashboard.

This request can be made only from a whitelisted IP.
If IP whitelisting is disabled, this request can be made by any user that has an API key.

Please note: your server IP addresses should be whitelisted, NOT players' or your ones.

HEADERS
x-api-key
{{your_api_key}}

PATH VARIABLES
id
Example Request
200
curl
curl --location 'https://api.nowpayments.io/v1/sub-partner/balance/:id' \
--header 'x-api-key: {{your_api_key}}'
200 OK
Example Response
Body
Headers (0)
View More
Text
{
  "result": {
    "subPartnerId": "111394288",
    "balances": {
      "usddtrc20": {
        "amount": 0.7,
        "pendingAmount": 0
      },
      "usdtbsc": {
        "amount": 1.0001341847350678,
        "pendingAmount": 0
      }
    }
  }
}
GET
Get users
https://api.nowpayments.ioo/v1/sub-partner?id=111&offset=1&limit=10&order=DESC
This method returns the entire list of your users.

AUTHORIZATION
Bearer Token
Token
{{token}}

HEADERS
Authorization
Bearer *your_jwt_token*

PARAMS
id
111

int or array of int (optional)

offset
1

(optional) default 0

limit
10

(optional) default 10

order
DESC

ASC / DESC (optional) default ASC

Example Request
200
curl
curl --location 'https://api.nowpayments.ioo/v1/sub-partner?offset=0&limit=10&order=DESC'
Example Response
Body
Headers (0)
View More
Text
{
  "result": [
    {
      "id": "111394288",
      "name": "test",
      "created_at": "2022-10-06T16:42:47.352Z",
      "updated_at": "2022-10-06T16:42:47.352Z"
    },
    {
      "id": "1515573197",
      "name": "test1",
      "created_at": "2022-10-09T21:56:33.754Z",
      "updated_at": "2022-10-09T21:56:33.754Z"
    }
  ],
  "count": 2
}
GET
Get all transfers
https://api.nowpayments.io/v1/sub-partner/transfers?id=111&status=CREATED&limit=10&offset=1&order=ASC
Returns the entire list of transfers created by your users.

The list of available statuses:

CREATED - the transfer is being created;
WAITING - the transfer is waiting for payment;
FINISHED - the transfer is completed;
REJECTED - for some reason, transaction failed;
HEADERS
Authorization
Bearer *your_jwt_token*

PARAMS
id
111

int or array of int (optional)

status
CREATED

string or array of string "WAITING"/"CREATED"/"FINISHED"/"REJECTED" (optional)

limit
10

(optional) default 10

offset
1

(optional) default 0

order
ASC

ASC / DESC (optional) default ASC

Example Request
200
View More
curl
curl --location 'https://api.nowpayments.io/v1/sub-partner/transfers?status=FINISHED&limit=10&offset=0&order=ASC'
200 OK
Example Response
Body
Headers (0)
View More
Text
{
  "result": [
    {
      "id": "111394288",
      "from_sub_id": "5209391548",
      "to_sub_id": "111394288",
      "status": "FINISHED",
      "created_at": "2022-10-09T18:53:21.975Z",
      "updated_at": "2022-10-09T18:55:00.696Z",
      "amount": "1",
      "currency": "usdtbsc"
    },
    {
      "id": "148427051",
      "from_sub_id": "111394288",
      "to_sub_id": "5209391548",
      "status": "FINISHED",
      "created_at": "2022-10-09T19:08:32.440Z",
      "updated_at": "2022-10-09T19:10:01.209Z",
      "amount": "1",
      "currency": "usdtbsc"
    },
    {
      "id": "1631380403",
      "from_sub_id": "5209391548",
      "to_sub_id": "111394288",
      "status": "FINISHED",
      "created_at": "2022-10-09T21:19:51.936Z",
      "updated_at": "2022-10-09T21:21:00.671Z",
      "amount": "2",
      "currency": "usdtbsc"
    },
    {
      "id": "1167886259",
      "from_sub_id": "5209391548",
      "to_sub_id": "111394288",
      "status": "FINISHED",
      "created_at": "2022-10-09T21:22:17.125Z",
      "updated_at": "2022-10-09T21:24:00.662Z",
      "amount": "2",
      "currency": "usdtbsc"
    },
    {
      "id": "48471014",
      "from_sub_id": "111394288",
      "to_sub_id": "5209391548",
      "status": "FINISHED",
      "created_at": "2022-10-09T21:25:29.231Z",
      "updated_at": "2022-10-09T21:27:00.676Z",
      "amount": "1",
      "currency": "usdtbsc"
    },
    {
      "id": "1304149238",
      "from_sub_id": "111394288",
      "to_sub_id": "5209391548",
      "status": "FINISHED",
      "created_at": "2022-10-09T21:54:57.713Z",
      "updated_at": "2022-10-09T21:56:01.056Z",
      "amount": "1",
      "currency": "usdtbsc"
    },
    {
      "id": "327209161",
      "from_sub_id": "111394288",
      "to_sub_id": "1515573197",
      "status": "FINISHED",
      "created_at": "2022-10-09T22:09:02.181Z",
      "updated_at": "2022-10-09T22:10:01.853Z",
      "amount": "1",
      "currency": "usdtbsc"
    }
  ],
  "count": 7
}
GET
Get transfer
https://api.nowpayments.io/v1/sub-partner/transfer/:id
Get the actual information about certain transfer. You need to provide the transfer ID in the request.

The list of available statuses:

CREATED - the transfer is being created;
WAITING - the transfer is waiting for payment;
FINISHED - the transfer is completed;
REJECTED - for some reason, transaction failed;
HEADERS
Authorization
Bearer *your_jwt_token*

PATH VARIABLES
id
Example Request
200
curl
curl --location 'https://api.nowpayments.io/v1/sub-partner/transfer/327209161'
200 OK
Example Response
Body
Headers (0)
View More
Text
{
  "result": {
    "id": "327209161",
    "from_sub_id": "111394288",
    "to_sub_id": "1515573197",
    "status": "FINISHED",
    "created_at": "2022-10-09T22:09:02.181Z",
    "updated_at": "2022-10-09T22:10:01.853Z",
    "amount": "1",
    "currency": "usdtbsc"
  }
}
POST
Deposit with payment
https://api.nowpayments.io/v1/sub-partner/payment
It will work as general white-labeled payment directly into user balance. You only need to show the user required for making a deposit information using the response of that endpoint.

This method allows you to top up a user account with a general payment.
You can check the actual payment status by using GET 9 Get payment status request.

AUTHORIZATION
Bearer Token
Token
{{token}}

HEADERS
x-api-key
{{x-api-key}}

Content-Type
application/json

Body
raw (json)
json
{
    "currency": "trx",
    "amount": 0.3,
    "sub_partner_id": "1631380403",
    "fixed_rate": false
}
Example Request
Deposit with payment
curl
curl --location 'https://api.nowpayments.io/v1/sub-partner/payment' \
--header 'x-api-key: {{x-api-token}}' \
--data '{
    "currency": "trx",
    "amount": 50,
    "sub_partner_id": "1631380403",
    "fixed_rate": false
}'
200 OK
Example Response
Body
Headers (0)
View More
Text
{
  "result": {
    "payment_id": "5250038861",
    "payment_status": "waiting",
    "pay_address": "TSszwFcbpkrZ2H85ZKsB6bEV5ffAv6kKai",
    "price_amount": 50,
    "price_currency": "trx",
    "pay_amount": 50,
    "amount_received": 0.0272467,
    "pay_currency": "trx",
    "order_id": null,
    "order_description": null,
    "ipn_callback_url": null,
    "created_at": "2022-10-11T10:49:27.414Z",
    "updated_at": "2022-10-11T10:49:27.414Z",
    "purchase_id": "5932573772",
    "smart_contract": null,
    "network": "trx",
    "network_precision": null,
    "time_limit": null,
    "burning_percent": null,
    "expiration_estimate_date": "2022-10-11T11:09:27.418Z",
    "valid_until": "valid_until_timestamp",
    "type": "crypto2crypto"
  }
}
POST
Deposit from your master balance
https://api.nowpayments.io/v1/sub-partner/deposit
This is a method for transferring funds from your master account to a user's one.
The actual information about the transfer's status can be obtained via Get transfer method.

The list of available statuses:

CREATED - the transfer is being created;
WAITING - the transfer is waiting for payment;
FINISHED - the transfer is completed;
REJECTED - for some reason, transaction failed;
AUTHORIZATION
Bearer Token
Token
{{token}}

HEADERS
x-api-key
{{x-api-token}}

Content-Type
application/json

Body
raw (json)
json
{
    "currency": "trx",
    "amount": 0.3,
    "sub_partner_id": "1631380403"
}
Example Request
200
curl
curl --location 'https://api.nowpayments.io/v1/sub-partner/deposit' \
--header 'x-api-key: {{x-api-token}}' \
--data '{
    "currency": "usddtrc20",
    "amount": 0.7,
    "sub_partner_id": "111394288"
}'
Example Response
Body
Headers (0)
View More
Text
{
    "result": {
        "id": "19649354",
        "from_sub_id": "5209391548", //main account
        "to_sub_id": "111394288", //sub account
        "status": "WAITING",
        "created_at": "2022-10-11T10:01:33.323Z",
        "updated_at": "2022-10-11T10:01:33.323Z",
        "amount": "0.7",
        "currency": "usddtrc20"
    }
}
POST
Write off on your account
https://api.nowpayments.io/v1/sub-partner/write-off
With this method you can withdraw funds from a user's account and transfer them to your master account.

The actual status of the transaction can be checked with Get transfer method.

The list of available statuses:

CREATED - the transfer is being created;
WAITING - the transfer is waiting for payment;
FINISHED - the transfer is completed;
REJECTED - for some reason, transaction failed;
AUTHORIZATION
Bearer Token
Token
{{token}}

HEADERS
Authorization
Bearer *your_jwt_token*

Content-Type
application/json

Body
raw (json)
json
{
    "currency": "trx",
    "amount": 0.3,
    "sub_partner_id": "1631380403"
}
Example Request
200
curl
curl --location 'https://api.nowpayments.io/v1/sub-partner/write-off' \
--header 'x-api-key: {{x-api-token}}' \
--data '{
    "currency": "trx",
    "amount": 0.3,
    "sub_partner_id": "1631380403"
}'
Example Response
Body
Headers (0)
View More
Text
{
    "result": {
        "id": "19649354",
        "from_sub_id": "111394288", //sub account
        "to_sub_id": "5209391548", //main account
        "status": "WAITING",
        "created_at": "2022-10-11T10:01:33.323Z",
        "updated_at": "2022-10-11T10:01:33.323Z",
        "amount": "0.7",
        "currency": "usddtrc20"
    }
}
Deposits
This set of method allows you to go for standard flow about receiving payments from your players. You can read more about standard flow integration in corresponding section.

POST
Create payment
https://api.nowpayments.io/v1/payment
Creates payment. With this method, your customer will be able to complete the payment without leaving your website.
Data must be sent as a JSON-object payload.
Required request fields:

price_amount (required) - the fiat equivalent of the price to be paid in crypto. If the pay_amount parameter is left empty, our system will automatically convert this fiat price into its crypto equivalent. Please note that this does not enable fiat payments, only provides a fiat price for yours and the customer’s convenience and information. NOTE: Some of the assets (KISHU, NWC, FTT, CHR, XYM, SRK, KLV, SUPER, OM, XCUR, NOW, SHIB, SAND, MATIC, CTSI, MANA, FRONT, FTM, DAO, LGCY), have a maximum price amount of ~$2000;

price_currency (required) - the fiat currency in which the price_amount is specified (usd, eur, etc);

pay_amount (optional) - the amount that users have to pay for the order stated in crypto. You can either specify it yourself, or we will automatically convert the amount you indicated in price_amount;

pay_currency (required) - the crypto currency in which the pay_amount is specified (btc, eth, etc), or one of available fiat currencies if it's enabled for your account (USD, EUR, ILS, GBP, AUD, RON);
NOTE: some of the currencies require a Memo, Destination Tag, etc., to complete a payment (AVA, EOS, BNBMAINNET, XLM, XRP). This is unique for each payment. This ID is received in “payin_extra_id” parameter of the response. Payments made without "payin_extra_id" cannot be detected automatically;

ipn_callback_url (optional) - url to receive callbacks, should contain "http" or "https", eg. "https://nowpayments.io";

order_id (optional) - inner store order ID, e.g. "RGDBP-21314";

order_description (optional) - inner store order description, e.g. "Apple Macbook Pro 2019 x 1";

payout_address (optional) - usually the funds will go to the address you specify in your Personal account. In case you want to receive funds on another address, you can specify it in this parameter;

payout_currency (optional) - currency of your external payout_address, required when payout_adress is specified;

payout_extra_id(optional) - extra id or memo or tag for external payout_address;

is_fixed_rate(optional) - boolean, can be true or false. Required for fixed-rate exchanges;
NOTE: the rate of exchange will be frozen for 20 minutes. If there are no incoming payments during this period, the payment status changes to "expired".

is_fee_paid_by_user(optional) - boolean, can be true or false. Required for fixed-rate exchanges with all fees paid by users;
NOTE: the rate of exchange will be frozen for 20 minutes. If there are no incoming payments during this period, the payment status changes to "expired";

Here the list of available statuses of payment:

waiting - waiting for the customer to send the payment. The initial status of each payment;
confirming - the transaction is being processed on the blockchain. Appears when NOWPayments detect the funds from the user on the blockchain;
Please note: each currency has its own amount of confirmations requires to start the processing.
confirmed - the process is confirmed by the blockchain. Customer’s funds have accumulated enough confirmations;
sending - the funds are being sent to your personal wallet. We are in the process of sending the funds to you;
partially_paid - it shows that the customer sent the less than the actual price. Appears when the funds have arrived in your wallet;
finished - the funds have reached your personal address and the payment is finished;
failed - the payment wasn't completed due to the error of some kind;
expired - the user didn't send the funds to the specified address in the 7 days time window;
Please note: when you're creating a fiat2crypto payment you also should include additional header to your request - "origin-ip : xxx", where xxx is your customer IP address.

HEADERS
x-api-key
{{your_api_key}}

Content-Type
application/json

Body
raw (json)
json
{
  "price_amount": 3999.5,
  "price_currency": "usd",
  "pay_currency": "btc",
  "ipn_callback_url": "https://nowpayments.io",
  "order_id": "RGDBP-21314",
  "order_description": "Apple Macbook Pro 2019 x 1",
  "is_fixed_rate": true,
  "is_fee_paid_by_user": false
}
Example Request
201
curl
curl --location 'https://api.nowpayments.io/v1/payment' \
--header 'x-api-key: <your_api_key>' \
--header 'Content-Type: application/json' \
--data '{
  "price_amount": 3999.5,
  "price_currency": "usd",
  "pay_currency": "btc",
  "ipn_callback_url": "https://nowpayments.io",
  "order_id": "RGDBP-21314",
  "order_description": "Apple Macbook Pro 2019 x 1"
}'
201 Created
Example Response
Body
Headers (19)
View More
json
{
  "payment_id": "5745459419",
  "payment_status": "waiting",
  "pay_address": "3EZ2uTdVDAMFXTfc6uLDDKR6o8qKBZXVkj",
  "price_amount": 3999.5,
  "price_currency": "usd",
  "pay_amount": 0.17070286,
  "pay_currency": "btc",
  "order_id": "RGDBP-21314",
  "order_description": "Apple Macbook Pro 2019 x 1",
  "ipn_callback_url": "https://nowpayments.io",
  "created_at": "2020-12-22T15:00:22.742Z",
  "updated_at": "2020-12-22T15:00:22.742Z",
  "purchase_id": "5837122679",
  "amount_received": null,
  "payin_extra_id": null,
  "smart_contract": "",
  "network": "btc",
  "network_precision": 8,
  "time_limit": null,
  "burning_percent": null,
  "expiration_estimate_date": "2020-12-23T15:00:22.742Z"
}
GET
Get estimated price
https://api.nowpayments.io/v1/estimate?amount=3999.5000&currency_from=usd&currency_to=btc
This is a method for calculating the approximate price in cryptocurrency for a given value in Fiat currency. You will need to provide the initial cost in the Fiat currency (amount, currency_from) and the necessary cryptocurrency (currency_to)
Currently following fiat currencies are available: USD, EUR, CAD, GBP, AUD, ILS, RON.

Please note that this method allows you to get estimates for crypto pairs as well.

HEADERS
x-api-key
{{your_api_key}}

PARAMS
amount
3999.5000

currency_from
usd

currency_to
btc

Example Request
200
View More
curl
curl --location 'https://api.nowpayments.io/v1/estimate?amount=3999.5000&currency_from=usd&currency_to=btc' \
--header 'x-api-key: <your_api_key>'
200 OK
Example Response
Body
Headers (20)
json
{
  "currency_from": "usd",
  "amount_from": 3999.5,
  "currency_to": "btc",
  "estimated_amount": 0.17061637
}
GET
Get payment status
https://api.nowpayments.io/v1/payment/:payment_id
Get the actual information about the payment. You need to provide the ID of the payment in the request.

NOTE! You should make the get payment status request with the same API key that you used in the create payment request.
Here is the list of available statuses:

waiting - waiting for the customer to send the payment. The initial status of each payment;
confirming - the transaction is being processed on the blockchain. Appears when NOWPayments detect the funds from the user on the blockchain;
confirmed - the process is confirmed by the blockchain. Customer’s funds have accumulated enough confirmations;
sending - the funds are being sent to your personal wallet. We are in the process of sending the funds to you;
partially_paid - it shows that the customer sent the less than the actual price. Appears when the funds have arrived in your wallet;
finished - the funds have reached your personal address and the payment is finished;
failed - the payment wasn't completed due to the error of some kind;
refunded - the funds were refunded back to the user;
expired - the user didn't send the funds to the specified address in the 7 days time window;
Additional info:

outcome_amount - this parameter shows the amount that will be (or is already) received on your Outcome Wallet once the transaction is settled;
outcome_currency - this parameter shows the currency in which the transaction will be settled;
invoice_id - this parameter shows invoice ID from which the payment was created;
HEADERS
x-api-key
{{your_api_key}}

PATH VARIABLES
payment_id
Example Request
200
curl
curl --location 'https://api.nowpayments.io/v1/payment/5524759814' \
--header 'x-api-key: <your_api_key>'
200 OK
Example Response
Body
Headers (20)
View More
json
{
  "payment_id": 5524759814,
  "payment_status": "finished",
  "pay_address": "TNDFkiSmBQorNFacb3735q8MnT29sn8BLn",
  "price_amount": 5,
  "price_currency": "usd",
  "pay_amount": 165.652609,
  "actually_paid": 180,
  "pay_currency": "trx",
  "order_id": "RGDBP-21314",
  "order_description": "Apple Macbook Pro 2019 x 1",
  "purchase_id": "4944856743",
  "created_at": "2020-12-16T14:30:43.306Z",
  "updated_at": "2020-12-16T14:40:46.523Z",
  "outcome_amount": 178.9005,
  "outcome_currency": "trx"
}
GET
Get list of payments
https://api.nowpayments.io/v1/payment/?limit=10&page=0&sortBy=created_at&orderBy=asc&dateFrom=2020-01-01&dateTo=2021-01-01
Returns the entire list of all transactions created with certain API key.
The list of optional parameters:

limit - number of records in one page. (possible values: from 1 to 500);
page - the page number you want to get (possible values: from 0 to page count - 1);
invoiceId - filtering payments by certain invoice ID;
sortBy - sort the received list by a paramenter. Set to created_at by default (possible values: payment_id, payment_status, pay_address, price_amount, price_currency, pay_amount, actually_paid, pay_currency, order_id, order_description, purchase_id, outcome_amount, outcome_currency);
orderBy - display the list in ascending or descending order. Set to asc by default (possible values: asc, desc);
dateFrom - select the displayed period start date (date format: YYYY-MM-DD or yy-MM-ddTHH:mm:ss.SSSZ);
dateTo - select the displayed period end date (date format: YYYY-MM-DD or yy-MM-ddTHH:mm:ss.SSSZ);
AUTHORIZATION
Bearer Token
Token
{{token}}

HEADERS
x-api-key
{{your_api_key}}

Authorization
Bearer *your_jwt_token*

PARAMS
limit
10

page
0

sortBy
created_at

orderBy
asc

dateFrom
2020-01-01

dateTo
2021-01-01

Example Request
200
View More
curl
curl --location 'https://api.nowpayments.io/v1/payment/?limit=10&page=0&sortBy=created_at&orderBy=asc&dateFrom=2020-01-01&dateTo=2021-01-01' \
--header 'x-api-key: <your_api_key>' \
--header 'Authorization: <your_jwt_token>'
200 OK
Example Response
Body
Headers (20)
View More
json
{
  "data": [
    {
      "payment_id": 5524759814,
      "payment_status": "finished",
      "pay_address": "TNDFkiSmBQorNFacb3735q8MnT29sn8BLn",
      "price_amount": 5,
      "price_currency": "usd",
      "pay_amount": 165.652609,
      "actually_paid": 180,
      "pay_currency": "trx",
      "order_id": "RGDBP-21314",
      "order_description": "Apple Macbook Pro 2019 x 1",
      "purchase_id": "4944856743",
      "outcome_amount": 178.9005,
      "outcome_currency": "trx"
    },
    {
      "payment_id": 5867063509,
      "payment_status": "expired",
      "pay_address": "TVKHbLc47BnMbdE7QN4X5Q1FtyZLGGiTo8",
      "price_amount": 5,
      "price_currency": "usd",
      "pay_amount": 165.652609,
      "actually_paid": 0,
      "pay_currency": "trx",
      "order_id": "RGDBP-21314",
      "order_description": "Apple Macbook Pro 2019 x 1",
      "purchase_id": "5057851130",
      "outcome_amount": 164.6248468,
      "outcome_currency": "trx"
    },
    {
      "payment_id": 5745459419,
      "payment_status": "waiting",
      "pay_address": "3EZ2uTdVDAMFXTfc6uLDDKR6o8qKBZXVkj",
      "price_amount": 3999.5,
      "price_currency": "usd",
      "pay_amount": 0.17070286,
      "actually_paid": 0,
      "pay_currency": "btc",
      "order_id": "RGDBP-21314",
      "order_description": "Apple Macbook Pro 2019 x 1",
      "purchase_id": "5837122679",
      "outcome_amount": 0.1687052,
      "outcome_currency": "btc"
    },
    {
      "payment_id": 4650948408,
      "payment_status": "waiting",
      "pay_address": "394UZCUdx3NN8VDsCZW8c6AzP7cXEXA8Xq",
      "price_amount": 3999.5,
      "price_currency": "usd",
      "pay_amount": 0.8102725,
      "actually_paid": 0,
      "pay_currency": "btc",
      "order_id": "RGDBP-21314",
      "order_description": "Apple Macbook Pro 2019 x 1",
      "purchase_id": "5094859409",
      "outcome_amount": 0.8019402,
      "outcome_currency": "btc"
    },
    {
      "payment_id": 5605634688,
      "payment_status": "expired",
      "pay_address": "3EWJaZBaRWbPjSBTpgFcvxpnXLJzFDCHqW",
      "price_amount": 500,
      "price_currency": "usd",
      "pay_amount": 993.87178656,
      "actually_paid": 0,
      "pay_currency": "bcd",
      "order_id": "RGDBP-21314",
      "order_description": "Apple Macbook Pro 2019 x 1",
      "purchase_id": "5817305007",
      "outcome_amount": 988.9016296,
      "outcome_currency": "bcd"
    },
    {
      "payment_id": 5241856814,
      "payment_status": "expired",
      "pay_address": "qzkshdh94vhdcyuejjf8ltcy2cl246hw0c68t36z69",
      "price_amount": 500,
      "price_currency": "usd",
      "pay_amount": 1.85459941,
      "actually_paid": 0,
      "pay_currency": "bch",
      "order_id": "RGDBP-21314",
      "order_description": "Apple Macbook Pro 2019 x 1",
      "purchase_id": "5941190675",
      "outcome_amount": 1.8451261,
      "outcome_currency": "bch"
    },
    {
      "payment_id": 5751462089,
      "payment_status": "expired",
      "pay_address": "AYyecr8WKVpj2PNonjyUpn9sCHFyFMLdN1",
      "price_amount": 500,
      "price_currency": "usd",
      "pay_amount": 56.4344495,
      "actually_paid": 0,
      "pay_currency": "btg",
      "order_id": "RGDBP-21314",
      "order_description": "Apple Macbook Pro 2019 x 1",
      "purchase_id": "6229667127",
      "outcome_amount": 56.151958,
      "outcome_currency": "btg"
    },
    {
      "payment_id": 6100223670,
      "payment_status": "expired",
      "pay_address": "0x6C3E920D0fdAF45c75b6c00f25Aa6a58429d4efB",
      "price_amount": 500,
      "price_currency": "usd",
      "pay_amount": 496.84604252,
      "actually_paid": 0,
      "pay_currency": "dai",
      "order_id": "RGDBP-21314",
      "order_description": "Apple Macbook Pro 2019 x 1",
      "purchase_id": "5376931412",
      "outcome_amount": 489.9433465,
      "outcome_currency": "dai"
    },
    {
      "payment_id": 4460859238,
      "payment_status": "expired",
      "pay_address": "3C85TUuBKEkoZZsTawiJhYZtVVLgE4GWqj",
      "price_amount": 500,
      "price_currency": "usd",
      "pay_amount": 0.02596608,
      "actually_paid": 0,
      "pay_currency": "btc",
      "order_id": "RGDBP-21314",
      "order_description": "Apple Macbook Pro 2019 x 1",
      "purchase_id": "5652098489",
      "outcome_amount": 0.025819,
      "outcome_currency": "btc"
    },
    {
      "payment_id": 4948632928,
      "payment_status": "expired",
      "pay_address": "DLmK6vLURgHoWVZrQztthSqV71CBePG5k5",
      "price_amount": 500,
      "price_currency": "usd",
      "pay_amount": 154569.92936569,
      "actually_paid": 0,
      "pay_currency": "doge",
      "order_id": "RGDBP-21314",
      "order_description": "Apple Macbook Pro 2019 x 1",
      "purchase_id": "4811984625",
      "outcome_amount": 153789.0997188,
      "outcome_currency": "doge"
    }
  ],
  "limit": 10,
  "page": 0,
  "pagesCount": 6,
  "total": 59
}
Payouts
This set of methods will allow you to set up fully automated payouts-on-demand for your players.

Recommended payouts requesting flow using API:

Check if your payout address is valid using POST Validate address endpoint;
If it's valid, create a withdrawal using POST Create payout endpoint;
Verify your payout with 2fa (by default it's mandatory) using POST Verify payout endpoint;
2FA automation:

Using the API you can automate 2fa by implementing the OTP generation library in your code and set it up in your dashboard. "Dashboard" - "Account settings" - "Two step authentification" - "Use an app"

Save the secret key and set it up in your favorite 2FA application as well, otherwise you won't be able to get access to your dashboard!

Please note:

Payouts can be requested only using a whitelisted IP address, and to whitelisted wallet addresses. It's a security measure enabled for each partner account by default.

You can whitelist both of these anytime dropping a formal request using your registration email to partners@nowpayments.io.

For more information about whitelisting you can reach us at partners@nowpayments.io.

GET
List of payouts
https://api.nowpayments.io/v1/payout
This endpoint allows you to get a list of your payouts.

The list of available parameters:

batch_id: batch ID of enlisted payouts;
status: the statuses of enlisted payouts;
order_by: can be id, batchId, dateCreated, dateRequested, dateUpdated, currency, status;
order: 'asc' or 'desc' order;
date_from: beginning date of the requested payouts;
date_to: ending date of the requested payouts;
limit: how much results to show;
page: the current page;
HEADERS
x-api-key
{{your_api_key}}

Example Request
List of payouts
curl
curl --location 'https://api.nowpayments.io/v1/payout'
200 OK
Example Response
Body
Headers (1)
View More
json
{
  "payouts": [
    {
      "id": "5000248325",
      "batch_withdrawal_id": "5000145498",
      "status": "FINISHED",
      "error": null,
      "currency": "trx",
      "amount": "94.088939",
      "address": "[payout address]",
      "extra_id": null,
      "hash": "[hash]",
      "ipn_callback_url": null,
      "payout_description": null,
      "is_request_payouts": true,
      "unique_external_id": null,
      "created_at": "2023-04-06T14:44:59.684Z",
      "requested_at": "2023-04-06T14:45:55.505Z",
      "updated_at": "2023-04-06T14:49:08.031Z"
    },
    {
      "id": "5000247307",
      "batch_withdrawal_id": "5000144539",
      "status": "FINISHED",
      "error": null,
      "currency": "trx",
      "amount": "10.000000",
      "address": "[payout address]",
      "extra_id": null,
      "hash": "[hash]",
      "ipn_callback_url": null,
      "payout_description": null,
      "is_request_payouts": true,
      "unique_external_id": null,
      "created_at": "2023-04-05T19:21:40.836Z",
      "requested_at": "2023-04-05T19:23:17.111Z",
      "updated_at": "2023-04-05T19:27:30.895Z"
    }
  ]
}
Trading platforms
Standard Trading platform Flow
Registration and getting deposits:

API - Integrate "POST Create new user account" into your registration process, so users will have dedicated balance right after completing registration.
UI - Ask a customer for desirable deposit amount to top up their balance, and desired currency for deposit.
API - Get the minimum payment amount for the selected currency pair (payment currency to your payout wallet currency) with the "GET Minimum payment amount" method;
API - Get the estimate of the total amount in crypto with "GET Estimated price" and check that it is larger than the minimum payment amount from step 4;
API - Call the "POST Deposit with payment" method to create a payment and get the deposit address (in our example, the generated BTC wallet address is returned from this method);
UI - Ask a customer to send the payment to the generated deposit address (in our example, user has to send BTC coins);
UI - A customer sends coins, NOWPayments processes and exchanges them (if required), and credit the payment to your players' balance;
API - You can get the payment status either via our IPN callbacks or manually, using "GET Payment Status" and display it to a customer so that they know when their payment has been processed;
API - you call the list of payments made to your account via the "GET List of payments" method;
Payouts:

UI - ask the user for desirable amount, coin and address for payout.
API - call the player balance with "GET user balance" method and check if player has enough balance.
API - call "POST validate address" to check if the provided address is valid on the blockchain.
API - call "POST write off your account" method to collect the requested amount from user balance to your master balance.
API - call "POST Create payout" to create a payout.
API - create an OTP password for 2fa validation using external libraries.
API - call "POST Verify payout" to validate a payout with 2fa code.
API - You can get the payout status either via our IPN callbacks or manually, using "GET Payout Status" and display it to a customer so that they know when their payment has been processed;
UI - NOWPayments processes payout and credit the payment to your players' wallet;
All related information about your operations will also be available in your NOWPayments dashboard.

All related information about your operations will also be available in your NOWPayments dashboard.

If you have any additional questions about integration feel free to drop a message to partners@nowpayments.io for further guidance.

